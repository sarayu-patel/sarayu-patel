//question---  Given  n non-negative integers representing an elevation(height) map where the width of each bar is 1 ,compute how much water it can trap water after raining
public class TrappedRainWtr {
    public static int trappedRainWater(int height[]){
        int n=height.length;
        //calculate leftmax boundary
        int leftmax[]=new int[n];
        leftmax[0]=height[0];
        for(int i=1;i<height.length;i++){
            leftmax[i]=Math.max(height[i], leftmax[i-1]);
        }
        //calculate rightmax boundary
        int rightmax[]=new int[n];
        rightmax[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            rightmax[i]=Math.max(height[i],rightmax[i+1]);
        }
        //loop
        int trappedWater=0;
        for(int i=0;i<n;i++){
            int waterlevel=Math.min(leftmax[i], rightmax[i]);
            trappedWater+=(waterlevel-height[i]);

        }
        return trappedWater;
        //waterlevel=min(leftmax boundary, rightmax boundary)
        //trapped water=waterlevel-height[i]
    }
    public static void main(String[]args){
        int height[]={0,1,0,2,1,0,1,3,2,1,2,1};
        System.out.println(trappedRainWater(height));

    }
}
